name: Benchmark
on:
  pull_request:

env:
  BENCHMARK_PROJECT: 'Source\tests\BenchmarkTests\Cogworks.Essentials.BenchmarkTests\Cogworks.Essentials.BenchmarkTests.csproj'
  BENCHMARK_REPORT: 'Cogworks.Essentials.BenchmarkTests.Benchmarks.MemoryCacheBenchmark-report-github.md'
  BENCHMARK_REPORT_OUTPUT: '${{github.workspace}}\BenchmarkDotNet.Artifacts\results'

  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

  # Dotnet Setup
  DOTNET_VERSION: 3.1.401

  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true

  # Solution Setup
  CONFIG: 'Release'

  # Nuget Setup
  NUGET_VERSION: 'latest'

jobs:
  build-and-benchmark:
    runs-on: windows-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Configure NuGet
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: ${{ env.NUGET_VERSION }}

      - name: NuGet Restore
        shell: powershell
        working-directory: ${{ github.workspace }}
        run: |
          $solutions = Get-ChildItem -Path . -Recurse -Include *.sln

          foreach ($solutionFile in $solutions){
            nuget restore "$solutionFile"
          }

      - name: Install Dependencies
        shell: powershell
        working-directory: ${{ github.workspace }}
        run: |
          $solutions = Get-ChildItem -Path . -Recurse -Include *.sln

          foreach ($solutionFile in $solutions){
            dotnet restore "$solutionFile"
          }

      - name: Build
        shell: powershell
        working-directory: ${{ github.workspace }}
        run: |
          $solutions = Get-ChildItem -Path . -Recurse -Include *.sln

          foreach ($solutionFile in $solutions){
            msbuild.exe "$solutionFile" `
            /p:Configuration=${{ env.CONFIG }} `
            /p:DeployOnBuild=false `
            /p:SkipInvalidConfigurations=true `
            /p:TransformWebConfigEnabled=False `
            /p:AutoParameterizationWebConfigConnectionStrings=False `
            /p:MarkWebConfigAssistFilesAsExclude=False
          }

      - name: Run Benchmark
        shell: powershell
        run: |
          dotnet run `
            -p "${{ env.BENCHMARK_PROJECT }}" `
            -c ${{ env.CONFIG }} `
            -f netcoreapp3.1 `
            --no-build `
            --no-restore `
            --runtimes netcoreapp31 `
            --filter * `
            --join `
            --warmupCount 1 `
            --minIterationCount 9 `
            --maxIterationCount 10 `
            --iterationCount 5 `
            --strategy ColdStart

      - name: Upload benchmark results
        uses: actions/upload-artifact@v2
        with:
          name: benchmark-results
          path: ${{ env.BENCHMARK_REPORT_OUTPUT }}\${{ env.BENCHMARK_REPORT }}

  commenting:
    needs: build-and-benchmark
    runs-on: ubuntu-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v1
        with:
          name: benchmark-results

      - name: Comment PR - benchmark report
        uses: machine-learning-apps/pr-comment@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: benchmark-results/${{ env.BENCHMARK_REPORT }}
